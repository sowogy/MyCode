import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int d_count = 0;   //빈도수가 같은 알파벳의 개수 - 하나 이상이면 ? 출력
        int alphabet = 0;
        int[] count = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 , 0, 0 //count[0] = 'A' ~ count[31] = 'Z'
        ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        int big;

        Scanner sc = new Scanner(System.in);
        String s1 = sc.next();   //문자열 입력
        for(int i = 0; i < s1.length(); i++){      //아스키코드로 치환 후 각 알파벳마다 카운트
            int n = s1.charAt(i);
            if(n >= 97 && n <= 122){               //소문자면 97을 뺀 위치에 연산 Ex) a -> count[97-97]++
                count[n-97]++;
            }
            else
                count[n-65]++;                      //대문자면 65를 뺀 위치에 연산
        }

        big = findBigNum(count);                    //가장 높은 빈도수를 찾음

        for(int i = 0; i < count.length; i++){      //배열의 값과 빈도수가 같은걸 찾은 뒤 d_count++ > 1 -> ?, == 1 -> alphabet
            if(count[i] == big){
                d_count++;
                alphabet = i;
            }
            if(d_count >= 2 && i == 31){
                System.out.println("?");
                return;
            }
        }
        System.out.println((char)(alphabet+65));
    }
    static int findBigNum(int[] arr){         //가장 높은 빈도수를 찾는 메소드
        int max = arr[0];
        for(int i = 1; i < arr.length; i++){
            if(max < arr[i])
                max = arr[i];
        }
        return max;
    }

}
